import { RES_SUCCESS_CODE, ajax, errorHandler } from "@/utils";
import types from "@/store/types";
const getFormData = () => ({
  regions: null, // 地区数据
  regionSource: {}, //地区源数据
  shoeSize: [], //鞋码数据
  teamRegions: [], //赛区数据
  timeData: [
    [{
      value:0,
      label:'0时',
    },{
      value:1,
      label:'1时',
    },{
      value:2,
      label:'2时',
    },{
      value:3,
      label:'3时',
    },{
      value:4,
      label:'4时',
    },{
      value:5,
      label:'5时',
    },{
      value:6,
      label:'6时',
    },{
      value:7,
      label:'7时',
    },{
      value:8,
      label:'8时',
    },{
      value:9,
      label:'9时',
    },{
      value:10,
      label:'10时',
    },{
      value:11,
      label:'11时',
    },{
      value:12,
      label:'12时',
    },{
      value:13,
      label:'13时',
    },{
      value:14,
      label:'14时',
    },{
      value:15,
      label:'15时',
    },{
      value:16,
      label:'16时',
    },{
      value:17,
      label:'17时',
    },{
      value:18,
      label:'18时',
    },{
      value:19,
      label:'19时',
    },{
      value:20,
      label:'20时',
    },{
      value:21,
      label:'21时',
    },{
      value:22,
      label:'22时',
    },{
      value:23,
      label:'23时',
    },{
      value:24,
      label:'24时',
    },{
      value:25,
      label:'25时',
    },{
      value:26,
      label:'26时',
    },{
      value:27,
      label:'27时',
    },{
      value:28,
      label:'28时',
    },{
      value:29,
      label:'29时',
    },{
      value:30,
      label:'30时',
    },{
      value:31,
      label:'31时',
    },{
      value:32,
      label:'32时',
    },{
      value:33,
      label:'33时',
    },{
      value:34,
      label:'34时',
    },{
      value:35,
      label:'35时',
    },{
      value:36,
      label:'36时',
    },{
      value:37,
      label:'37时',
    },{
      value:38,
      label:'38时',
    },{
      value:39,
      label:'39时',
    },{
      value:40,
      label:'40时',
    },{
      value:41,
      label:'41时',
    },{
      value:42,
      label:'42时',
    },{
      value:43,
      label:'43时',
    },{
      value:44,
      label:'44时',
    },{
      value:45,
      label:'45时',
    },{
      value:46,
      label:'46时',
    },{
      value:47,
      label:'47时',
    },{
      value:48,
      label:'48时',
    },{
      value:49,
      label:'49时',
    },{
      value:50,
      label:'50时',
    },{
      value:51,
      label:'51时',
    },{
      value:52,
      label:'52时',
    },{
      value:53,
      label:'53时',
    },{
      value:54,
      label:'54时',
    },{
      value:55,
      label:'55时',
    },{
      value:56,
      label:'56时',
    },{
      value:57,
      label:'57时',
    },{
      value:58,
      label:'58时',
    },{
      value:59,
      label:'59时',
    },{
      value:60,
      label:'60时',
    },{
      value:61,
      label:'61时',
    },{
      value:62,
      label:'62时',
    },{
      value:63,
      label:'63时',
    },{
      value:64,
      label:'64时',
    },{
      value:65,
      label:'65时',
    },{
      value:66,
      label:'66时',
    },{
      value:67,
      label:'67时',
    },{
      value:68,
      label:'68时',
    },{
      value:69,
      label:'69时',
    },{
      value:70,
      label:'70时',
    },{
      value:71,
      label:'71时',
    },{
      value:72,
      label:'72时',
    },{
      value:73,
      label:'73时',
    },{
      value:74,
      label:'74时',
    },{
      value:75,
      label:'75时',
    },{
      value:76,
      label:'76时',
    },{
      value:77,
      label:'77时',
    },{
      value:78,
      label:'78时',
    },{
      value:79,
      label:'79时',
    },{
      value:80,
      label:'80时',
    },{
      value:81,
      label:'81时',
    },{
      value:82,
      label:'82时',
    },{
      value:83,
      label:'83时',
    },{
      value:84,
      label:'84时',
    },{
      value:85,
      label:'85时',
    },{
      value:86,
      label:'86时',
    },{
      value:87,
      label:'87时',
    },{
      value:88,
      label:'88时',
    },{
      value:89,
      label:'89时',
    },{
      value:90,
      label:'90时',
    },{
      value:91,
      label:'91时',
    },{
      value:92,
      label:'92时',
    },{
      value:93,
      label:'93时',
    },{
      value:94,
      label:'94时',
    },{
      value:95,
      label:'95时',
    },{
      value:96,
      label:'96时',
    },{
      value:97,
      label:'97时',
    },{
      value:98,
      label:'98时',
    },{
      value:99,
      label:'99时',
    },{
      value:100,
      label:'100时',
    }],
    [{
      value:0,
      label:'0分',
    },{
      value:1,
      label:'1分',
    },{
      value:2,
      label:'2分',
    },{
      value:3,
      label:'3分',
    },{
      value:4,
      label:'4分',
    },{
      value:5,
      label:'5分',
    },{
      value:6,
      label:'6分',
    },{
      value:7,
      label:'7分',
    },{
      value:8,
      label:'8分',
    },{
      value:9,
      label:'9分',
    },{
      value:10,
      label:'10分',
    },{
      value:11,
      label:'11分',
    },{
      value:12,
      label:'12分',
    },{
      value:13,
      label:'13分',
    },{
      value:14,
      label:'14分',
    },{
      value:15,
      label:'15分',
    },{
      value:16,
      label:'16分',
    },{
      value:17,
      label:'17分',
    },{
      value:18,
      label:'18分',
    },{
      value:19,
      label:'19分',
    },{
      value:20,
      label:'20分',
    },{
      value:21,
      label:'21分',
    },{
      value:22,
      label:'22分',
    },{
      value:23,
      label:'23分',
    },{
      value:24,
      label:'24分',
    },{
      value:25,
      label:'25分',
    },{
      value:26,
      label:'26分',
    },{
      value:27,
      label:'27分',
    },{
      value:28,
      label:'28分',
    },{
      value:29,
      label:'29分',
    },{
      value:30,
      label:'30分',
    },{
      value:31,
      label:'31分',
    },{
      value:32,
      label:'32分',
    },{
      value:33,
      label:'33分',
    },{
      value:34,
      label:'34分',
    },{
      value:35,
      label:'35分',
    },{
      value:36,
      label:'36分',
    },{
      value:37,
      label:'37分',
    },{
      value:38,
      label:'38分',
    },{
      value:39,
      label:'39分',
    },{
      value:40,
      label:'40分',
    },{
      value:41,
      label:'41分',
    },{
      value:42,
      label:'42分',
    },{
      value:43,
      label:'43分',
    },{
      value:44,
      label:'44分',
    },{
      value:45,
      label:'45分',
    },{
      value:46,
      label:'46分',
    },{
      value:47,
      label:'47分',
    },{
      value:48,
      label:'48分',
    },{
      value:49,
      label:'49分',
    },{
      value:50,
      label:'50分',
    },{
      value:51,
      label:'51分',
    },{
      value:52,
      label:'52分',
    },{
      value:53,
      label:'53分',
    },{
      value:54,
      label:'54分',
    },{
      value:55,
      label:'55分',
    },{
      value:56,
      label:'56分',
    },{
      value:57,
      label:'57分',
    },{
      value:58,
      label:'58分',
    },{
      value:59,
      label:'59分',
    },{
      value:60,
      label:'60分',
    }
   ],
    [{
      value:0,
      label:'0秒',
    },{
      value:1,
      label:'1秒',
    },{
      value:2,
      label:'2秒',
    },{
      value:3,
      label:'3秒',
    },{
      value:4,
      label:'4秒',
    },{
      value:5,
      label:'5秒',
    },{
      value:6,
      label:'6秒',
    },{
      value:7,
      label:'7秒',
    },{
      value:8,
      label:'8秒',
    },{
      value:9,
      label:'9秒',
    },{
      value:10,
      label:'10秒',
    },{
      value:11,
      label:'11秒',
    },{
      value:12,
      label:'12秒',
    },{
      value:13,
      label:'13秒',
    },{
      value:14,
      label:'14秒',
    },{
      value:15,
      label:'15秒',
    },{
      value:16,
      label:'16秒',
    },{
      value:17,
      label:'17秒',
    },{
      value:18,
      label:'18秒',
    },{
      value:19,
      label:'19秒',
    },{
      value:20,
      label:'20秒',
    },{
      value:21,
      label:'21秒',
    },{
      value:22,
      label:'22秒',
    },{
      value:23,
      label:'23秒',
    },{
      value:24,
      label:'24秒',
    },{
      value:25,
      label:'25秒',
    },{
      value:26,
      label:'26秒',
    },{
      value:27,
      label:'27秒',
    },{
      value:28,
      label:'28秒',
    },{
      value:29,
      label:'29秒',
    },{
      value:30,
      label:'30秒',
    },{
      value:31,
      label:'31秒',
    },{
      value:32,
      label:'32秒',
    },{
      value:33,
      label:'33秒',
    },{
      value:34,
      label:'34秒',
    },{
      value:35,
      label:'35秒',
    },{
      value:36,
      label:'36秒',
    },{
      value:37,
      label:'37秒',
    },{
      value:38,
      label:'38秒',
    },{
      value:39,
      label:'39秒',
    },{
      value:40,
      label:'40秒',
    },{
      value:41,
      label:'41秒',
    },{
      value:42,
      label:'42秒',
    },{
      value:43,
      label:'43秒',
    },{
      value:44,
      label:'44秒',
    },{
      value:45,
      label:'45秒',
    },{
      value:46,
      label:'46秒',
    },{
      value:47,
      label:'47秒',
    },{
      value:48,
      label:'48秒',
    },{
      value:49,
      label:'49秒',
    },{
      value:50,
      label:'50秒',
    },{
      value:51,
      label:'51秒',
    },{
      value:52,
      label:'52秒',
    },{
      value:53,
      label:'53秒',
    },{
      value:54,
      label:'54秒',
    },{
      value:55,
      label:'55秒',
    },{
      value:56,
      label:'56秒',
    },{
      value:57,
      label:'57秒',
    },{
      value:58,
      label:'58秒',
    },{
      value:59,
      label:'59秒',
    },{
      value:60,
      label:'60秒',
    },]
  ],
  orderTime:[
    {times:'10:00-12:00',start:'10:00',end:'12:00'},
    {times:'12:00-14:00',start:'10:00',end:'12:00'},
    {times:'14:00-16:00',start:'10:00',end:'12:00'},
    {times:'16:00-18:00',start:'10:00',end:'12:00'},
    {times:'18:00-20:00',start:'10:00',end:'12:00'},
    {times:'20:00-22:00',start:'10:00',end:'12:00'},
  ]
});
class FormDataHandler {
  data = getFormData();

  updateData(next) {
    this.data = { ...this.data, ...next };
  }
  /**
   * 获取鞋码
   */
  getShoneSize() {
   return ajax({
      url: types.GET_SHOES_SIZES,
      host: $ON_API_HOST,
      method: "GET",
    })
      .then((res) => {
        const { data } = res;
        this.updateData({ shoeSize: data || {} });
      })
      .catch((err) => {
        errorHandler(err, true, "@getShoneSize::");
      });
  }
  /**
   * 获取赛区
   */
  getTeamRegions() {
    ajax({
      url: types.GET_TEAM_REGIONS,
      host: $ON_API_HOST,
      method: "GET",
    })
      .then((res) => {
        const { data } = res;
        this.updateData({ teamRegions: data || {} });
      })
      .catch((err) => {
        errorHandler(err, true, "@getShoneSize::");
      });
  }

  /**
   * form => 获取省市区数据
   *
   */
  loadRegionsConfig() {
    return ajax({
      url: types.ADDRESS_CONFIG,
      method: "POST",
    })
      .then((res) => {
        const { code, data } = res;
        if (code === RES_SUCCESS_CODE && Object.keys(data[0]).length) {
          this.updateData({
            regionSource: data,
          });
          const allProvinces = this.findRegionArrayByObjectKey("0");
          //
          const selectedProvinceKey = allProvinces[0].value;
          const allCities =
            this.findRegionArrayByObjectKey(selectedProvinceKey);
          //
          const selectedDistrictKey = allCities[0].value;
          const allDistricts =
            this.findRegionArrayByObjectKey(selectedDistrictKey);
          const regions = [allProvinces, allCities, allDistricts];
          this.updateData({
            regions,
          });
          // this.regionIndexes = [0, 0, 0];
        } else {
          errorHandler(err, true, "@loadConfig::");
        }
      })
      .catch((err) => {
        errorHandler(err, true, "@loadConfig::");
      });
  }
  /**
   * 查找并转换
   */
  findRegionArrayByObjectKey(key) {
    let target = this.data.regionSource[key];
    if (target && !Array.isArray(target)) {
      let allRegions = [];
      for (let key in target) {
        allRegions.push({ label: target[key], value: key });
      }
      return allRegions;
    } else {
      return target.map((o, i) => ({ label: o, value: i }));
    }
  }

  /** 进页面时, 额外字段所需数据 */
  getFormData() {
    return { ...this.data };
  }

  /** 清除额外字段所需数据 */
  clearFormData() {
    this.data = getFormData();
  }
}

export default new FormDataHandler();

